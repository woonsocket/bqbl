// If you change rules here, make sure to propagate the changes to
// database.rules.json in the repo. You can use `firebase deploy --only
// database` to push the rules file.
{
  "rules": {
    ".read": "auth != null",
    "scores": {
      ".read": true
    },
    "scores247": {
      ".read": true,
      "$season": {
        ".write": "root.child('roles/admins/' + auth.uid).exists()"
      }
    },
    "stats": {
      ".read": true,
      "$season": {
        ".write": "auth.uid == 'score-scraper' && $season == '2020'"
      }
    },
    "scrapestatus": {
      ".write": "auth.uid == 'score-scraper'"
    },
    "events": {
      ".read": true,
      "$season": {
        ".write": "(auth.uid == 'score-scraper' || root.child('roles/admins/' + auth.uid).exists()) && $season == '2020'",
        "$week": {
          "overrides": {
            ".write": "root.child('roles/admins/' + auth.uid).exists()"
          }
        }
      }
    },
    "playerpositions": {
      ".write": "auth.uid == 'score-scraper'"
    },
    "roles": {
      "admins": {
        ".write": "root.child('roles/admins/' + auth.uid).exists()"
      }
    },
    "leaguespec": {
      ".read": true,
      "$leagueid": {
        "plays": {
          "$year": {
            "$user_id": {
              "$week_id": {
                ".write": "$user_id === auth.uid && root.child('unlockedweeks/' +$week_id).val() > now"
              },
            },
          },
        },
        "probowl": {
          "$year": {
            // Wish this wasn't hard-coded. The Pro Bowl is traditionally
            // week 17. It doesn't live alongside the regular season weeks,
            // because the data schema is different.
            "$user_id": {
              ".write": "$user_id === auth.uid && root.child('unlockedweeks/17').val() > now"
            },
          },
        },
      },
    },
    "users": {
      ".read": true,
      "$user_id": {
        // TODO(harveyj): clean this up so there's just a week object
        // and a userdata object.
        "leagueid": {
          ".write": "$user_id === auth.uid"
        },
        "leaguename": {
          ".write": "$user_id === auth.uid"
        },
        "name": {
          ".write": "$user_id === auth.uid"
        },
        "weeks": {
          "$week_id": {
            ".write": "$user_id === auth.uid && root.child('unlockedweeks/' + newData.child('id').val()).val() > now"
          }
        },
        "probowl": {
          ".write": "$user_id === auth.uid && root.child('unlockedweeks/probowl').val() > now"
        },
      }
    },
    "unlockedweeks": {
      ".read": true,
      ".write": "root.child('roles/admins/' + auth.uid).exists()"
    },
    "leagues": {
      ".read": true,
      ".write": "root.child('roles/admins/' + auth.uid).exists()"
    },
    "tmp": {
      ".read": true,
      ".write": true
    }
  }
}
